version: 2.1

executors:
  dotnet:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
  aws:
    docker:
      - image: cimg/aws:2023.09

jobs:
  build-app:
    executor: dotnet
    steps:

      - checkout
      - run:
          name: Build application
          command: |
            cd src/Capstone
            dotnet restore
            dotnet publish -c Release -o ../../App /p:BUILD_NUMBER=${CIRCLE_BUILD_NUM}
            cd ~/project
            ls -la
      - persist_to_workspace:
          root: ~/project
          paths:
            - "App/*"
  
  package-app:
    executor: aws
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          version: 20.10.24
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            pwd
            ls -la
            echo "Application files:"
            ls -la App

            echo "Building container image"
            docker build --tag=capstone .
            docker image ls
      - run:
          name: Publish Docker image
          command: |
            echo "Publishing container image"
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 727020537064.dkr.ecr.us-east-1.amazonaws.com
            docker tag capstone:latest 727020537064.dkr.ecr.us-east-1.amazonaws.com/capstone:latest
            docker push 727020537064.dkr.ecr.us-east-1.amazonaws.com/capstone:latest

  deploy-infra:
    executor: aws
    steps:
      - checkout
      - run:
          name: Deploy infrastructure
          command: |
            echo "Creating AWS infrastructure for the application if not already there"
            aws cloudformation deploy \
                  --template-file .circleci/files/capstone-infra.yml \
                  --tags project=capstone \
                  --stack-name capstone \
                  --parameter-overrides KeyPairName="capstone" \
                  --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM"

  deploy-app:
    executor: aws
    steps:
      - checkout
      - run:
          name: Deploy application
          command: |
            aws eks update-kubeconfig --name capstone
            kubectl create namespace capstone
            kubectl apply -f .circleci/files/capstone-deploy.yml
            kubectl apply -f .circleci/files/capstone-service.yml
            kubectl -n capstone get all


workflows:
  default:
    jobs:
      - build-app
      - package-app:
          requires: [build-app]
      - deploy-infra:
          requires: [package-app]
      - deploy-app:
          requires: [deploy-infra]
          